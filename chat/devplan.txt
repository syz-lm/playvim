# chat

这几天正接到一个活，关于整pyqt界面的，但是我从来没接触过pyqt，这两年也是一直在
玩浏览器，学技术最佳实践来自于做项目，以及不断的重复，从而领悟出一个新的模式而
达到另一种境界。

所以，我就来搞个即时通讯的App，用Pyqt，然后服务端和客户端的api就用自己最擅长的
技术来实现。正好pyqt能调用python的模块，那就非常舒服了。

服务器，客户端，编写完毕之后，再来一个简单测试，通过后就可以开始UI界面的开发了
，所以接下来要攻克的是pyqt，学以致用，所以，我需要先纵观pyqt所有的组件之后，再
得出一个最适合我需要去详细了解的组件，用这些组件把我的App给写出来。

思路一目了然，而且，这都是以前从来没做过的，并且又不是无解的，那就很开心。

突然想把socket放到redis里保存，结果最后一思考这行不通，因为socket对象里有很多
状态参数，所以一切都没有意义了。web开发中cookie之所以能存到redis中是因为cookie
本身没有其它依赖的状态信息。思考这里的原因是，当服务器socket或者线程数达到上限
时，无法水平扩展，只能纵向。如果采用集群的方式，就会出现一种情况，A机器上的
socket要和B机器上的socket通讯，这时怎么弄？

但是，A机器上的socket又没有和B机器上的socket连接，只不过是客户端连接了A，但是
发送消息的接收放是在B上面。

所以，A和B要互联，这样他们就能互相通信，A通过连接B的socket把数据发给B，B再通过
解析索引到对应的socket，B上的客户端socket再把数据发送给客户端，消息就发送成功
了。

当然可以用消息队列，所以就不存在并发了，相当于把数“同步”过去，而A和B只有一条通道
就是socket连接，当然也可以通过消息队列来实现，A把数据发送到消息队，B从队列中取
出来再找。这样可以把A的压力缓解到消息队列中，当大量的消息需要从A转发到B时。

但是还是存在性能问题，因为A和B只有一条通道，要么socket要么消息队列。如果存在
大量的需要转发数据的条件了，用socket作为通道肯定就要崩溃。所以还是消息队列比较
靠谱。
